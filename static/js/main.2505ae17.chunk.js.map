{"version":3,"sources":["components/Message.js","reducers/root.js","store/index.js","reducers/counter.js","actions/index.js","components/ReduxRoutingExample.js","index.js","utils.js"],"names":["connect","state","console","log","message","root","_ref","react_default","a","createElement","initialState","history","createHistory","reducer","combineReducers","arguments","length","undefined","counter","count","type","router","connectRouter","store","createStore","applyMiddleware","routerMiddleware","push","rest","Object","objectWithoutProperties","JSON","stringify","onClick","pathname","search","queryString","filter","Dashboard","match","react_router_dom","to","concat","url","react_router","path","exact","props","_ref2","s","params","id","charAt","toUpperCase","slice","Example","Example2","About","_ref3","component","Home","Counter","_ref4","dispatch","App","_this$props","this","components_Message","ReduxRoutingExample","React","Component","rootElement","document","getElementById","ReactDOM","render","es","esm","src_App"],"mappings":"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","file":"static/js/main.2505ae17.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Message = ({ message }) => <div>{message}</div>;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    message: state.root.message\n  };\n};\n\nexport default connect(mapStateToProps)(Message);\n","const initialState = {\n  message: \"Hello from Redux\"\n};\n\nexport default (state = initialState, action) => {\n  return state;\n};\n","import queryString from \"query-string\";\nimport { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport rootReducer from \"../reducers/root\";\nimport counter from \"../reducers/counter\";\n\nconst history = createHistory();\n\n// Add query string to history (needed because React-Router >= v4 doesn't implement it)\n// Code from https://github.com/ReactTraining/react-router/issues/4410#issuecomment-293772446\n// --> works but we could use Connected history and\n//     do this.props.history.listen in app ComponentDidMount\n//        ^--- wasn't working\n// Note: Listener not needed for BrowserHistory\n//       but we need HashHistory because this is for an Electron app\n//       and BrowserHistory wasn't working there\n//       --> HashRouter requires the query also in pathname e.g. /routing-example/filter/just-a-demo\n\n/*function addLocationQuery(history) {\n  console.log(\"add query\", history);\n  history.location = {\n    ...history.location,\n    query: history.location.query || queryString.parse(history.location.search)\n  };\n}\n\naddLocationQuery(history);\n\nhistory.listen(() => {\n  console.log(\"history change\", history);\n  // addLocationQuery(history);\n});\n*/\n\nconst reducer = combineReducers({\n  root: rootReducer,\n  counter,\n  router: connectRouter(history)\n});\n\nconst store = createStore(\n  reducer,\n  undefined,\n  applyMiddleware(\n    routerMiddleware(history) // for dispatching history actions);\n  )\n);\n\nexport { store, history };\n","import { INC_COUNTER, DEC_COUNTER, RESET_COUNTER } from \"../actions\";\n\nexport default (state = { count: 0 }, action) => {\n  switch (action.type) {\n    case INC_COUNTER:\n      return { count: state.count + 1 };\n    case DEC_COUNTER:\n      return { count: state.count - 1 };\n    case RESET_COUNTER:\n      return { count: 0 };\n  }\n\n  return state;\n};\n","// we could also group the action to different files\n// if this file is getting too long,\n// for smaller apps it's OK to add everything here\n\nexport const INC_COUNTER = \"INC_COUNTER\";\nexport const DEC_COUNTER = \"DEC_COUNTER\";\nexport const RESET_COUNTER = \"RESET_COUNTER\";\n\nexport const incCounter = () => ({\n  type: INC_COUNTER\n});\n\nexport const deccCounter = () => ({\n  type: DEC_COUNTER\n});\n","import React from \"react\";\nimport { push, replace } from \"connected-react-router\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../store\";\nimport queryString from \"query-string\";\n\nconst ReduxRoutingExample = ({ push, ...rest }) => (\n  <div>\n    <h1>Redux routing example</h1>\n    <pre>{JSON.stringify(rest, null, 2)}</pre>\n    <button onClick={() => push(\"/dashboard\")}>\n      Redirect to dashboard (using connected router)\n    </button>\n    <button onClick={() => history.push(\"/\")}>\n      Redirect with history import to / route\n    </button>\n    <button\n      onClick={() =>\n        push({\n          pathname: `/routing-example/`,\n          search: queryString.stringify({\n            filter: \"just-a-demo\"\n          }) //\"?filter=just-a-demo\",\n          /*query: {\n            filter: \"just-a-demo\"\n          }*/\n        })\n      }\n    >\n      Redirect to routing-example with query\n    </button>\n  </div>\n);\n\nexport default connect(\n  null,\n  { push }\n)(ReduxRoutingExample);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { ConnectedRouter, replace } from \"connected-react-router\";\n// import queryString from \"query-string\";\nimport { connect, Provider } from \"react-redux\";\nimport Message from \"./components/Message\";\nimport ReduxRoutingExample from \"./components/ReduxRoutingExample\";\nimport { capitalize } from \"./utils\";\n\nimport { store, history } from \"./store/index\";\n// Next, grab the link component to link to a new location:\n\n// Finally, render a Route to show some UI when the user visits /dashboard.\n\nconst Dashboard = ({ match }) => (\n  <div>\n    <h1>Dashboard</h1>\n    <Link to={`${match.url}/user1`}>User1</Link> |\n    <Link to={`${match.url}/user2`}>User2</Link>\n    <Switch>\n      {/* Switch component will render first match - useful to render :id route only if id supplied */}\n      <Route path=\"/dashboard/\" exact>\n        {props => (\n          <div>\n            <p>renders only if no :id is in path. Exact prop required</p>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n          </div>\n        )}\n      </Route>\n      <Route path=\"/dashboard/:id\">\n        {({ match }) => (\n          <p>\n            <strong>{capitalize(match && match.params.id)}</strong> dashboard\n            {JSON.stringify(match)}\n          </p>\n        )}\n      </Route>\n    </Switch>\n  </div>\n);\n\nconst Example = () => <h1>Example</h1>;\nconst Example2 = () => <h1>Example2</h1>;\n\nconst About = ({ match }) => (\n  <div>\n    <h1>About</h1>\n    <p>\n      How to do nested routing similar to React-Router v2 - v3? with render\n      props a similar code is possible but I would avoid it as it's just more\n      code with-out a benefit.\n    </p>\n    <p>\n      By using match.url instead of a hard-coded about/ route we only need to\n      change the route at the usage position and not inside the component\n    </p>\n    <Link to={`${match.url}/example1`}>example1</Link> |{\" \"}\n    <Link to={`${match.url}/example2`}>example2</Link>\n    {/*<Route path={`${match.url}`}>\n      {({ match: { url } }) => (\n        <Switch>\n          <Route path={`${url}/example1`} component={Example} />\n          <Route path={`${url}/example2`} component={Example2} />\n        </Switch>\n      )}\n    </Route>*/}\n    <Route path={`${match.url}/example1`} component={Example} />\n    <Route path={`${match.url}/example2`} component={Example2} />\n  </div>\n);\n\nconst Home = () => <h1>Homepage</h1>;\n\nconst Counter = connect(state => state.counter)(({ dispatch, ...rest }) => {\n  return (\n    <div>\n      Counter: {JSON.stringify(rest)}\n      <button onClick={() => dispatch({ type: \"INC_COUNTER\" })}>inc</button>\n    </div>\n  );\n});\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { dispatch, router } = this.props;\n\n    console.log(\"app\", this.props);\n    /*history.location = Object.assign(history.location, {\n        query: history.location.query\n          ? history.location.query\n          : queryString.parse(history.location.search)\n      });*/\n    //});\n  }\n  render() {\n    return (\n      <div>\n        <nav>\n          <Link to=\"/\">Home</Link> | <Link to=\"/dashboard\">Dashboard</Link> |\n          <Link to=\"/about-me\">About</Link> |{\" \"}\n          <Link to=\"/routing-example\">Routing</Link>\n        </nav>\n        <h1>Redux demo part</h1>\n        <Message />\n        <Counter />\n        <pre>{JSON.stringify(this.props, null, 2)}</pre>\n        <hr />\n        <Switch>\n          {/* By using Switch component we're only getting one route rendered at a time */}\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/about-me\" component={About} />\n          <Route path=\"/routing-example\" component={ReduxRoutingExample} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n// const ConnectedApp = connect(state => state)(App);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  rootElement\n);\n","export const capitalize = s => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n"],"sourceRoot":""}